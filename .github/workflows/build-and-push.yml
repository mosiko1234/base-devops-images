name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Build Base Image
  build-base-image:
    name: Build and Push Base Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build and Push Base Image
      working-directory: ./base-image
      run: |
        docker buildx create --use
        docker buildx build \
          --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_REPO }}/base-image:cache \
          --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_REPO }}/base-image:cache,mode=max \
          -t ${{ secrets.DOCKERHUB_REPO }}/base-image:latest \
          -t ${{ secrets.DOCKERHUB_REPO }}/base-image:v1.0-$(date +%Y%m%d)-${{ github.sha }} \
          -t ${{ secrets.DOCKERHUB_REPO }}/base-image:cache \
          --push .

  # Job 2: Build Python Images
  build-python-images:
    name: Build and Push Python Images
    needs: build-base-image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.11, 3.12]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build and Push Python Image
      working-directory: ./python-layer
      run: |
        docker buildx create --use
        docker buildx build \
          --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:cache \
          --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:cache,mode=max \
          --build-arg BASE_IMAGE=${{ secrets.DOCKERHUB_REPO }}/base-image:latest \
          --build-arg PYTHON_VERSION=${{ matrix.python_version }} \
          -t ${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:latest \
          -t ${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:v${{ matrix.python_version }}-$(date +%Y%m%d)-${{ github.sha }} \
          -t ${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:cache \
          --push .

    - name: Test Python Image
      working-directory: ./python-layer
      run: |
        docker run --rm ${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:latest \
        python3 --version
        docker run --rm ${{ secrets.DOCKERHUB_REPO }}/python-${{ matrix.python_version }}:latest \
        pip --version

  # Job 3: Build Java Images
  build-java-images:
    name: Build and Push Java Images
    needs: build-base-image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version: [11, 17]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build and Push Java Image
      working-directory: ./java-layer
      run: |
        docker buildx create --use
        docker buildx build \
          --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_REPO }}/java-${{ matrix.java_version }}:cache \
          --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_REPO }}/java-${{ matrix.java_version }}:cache,mode=max \
          --build-arg BASE_IMAGE=${{ secrets.DOCKERHUB_REPO }}/base-image:latest \
          --build-arg JAVA_VERSION=${{ matrix.java_version }} \
          -t ${{ secrets.DOCKERHUB_REPO }}/java-${{ matrix.java_version }}:latest \
          -t ${{ secrets.DOCKERHUB_REPO }}/java-${{ matrix.java_version }}:v${{ matrix.java_version }}-$(date +%Y%m%d)-${{ github.sha }} \
          -t ${{ secrets.DOCKERHUB_REPO }}/java-${{ matrix.java_version }}:cache \
          --push .
