name: Build Docker Images

on:
  push:
    branches:
      - new_images

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Python dependencies
        run: pip install pyyaml  # ייתכן שיידרש

      - name: Generate Matrix
        id: set-matrix
        run: |
          python .github/scripts/generate_matrix.py > matrix.json
          cat matrix.json  # הדפסה לבדיקה
          echo "matrix=$(jq -c . < matrix.json)" >> $GITHUB_OUTPUT

  build-matrix:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Dockerfile from Template
        run: |
          cat Dockerfile.template | sed "s|{{BASE_IMAGE}}|${{ matrix.base_image }}|g" | sed "s|{{PACKAGES}}|${{ matrix.packages }}|g" > Dockerfile
          cat Dockerfile  # הדפסה לבדיקה

      - name: Set Image Tag
        run: |

          DOCKER_TAG="adafef2e596e/${{ matrix.language }}:${{ matrix.version }}"
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "Final Docker Tag: $DOCKER_TAG"

      - name: Build Docker Image
        run: |
          echo "Building Image: $DOCKER_TAG"
          docker build -t "$DOCKER_TAG" .

      - name: Save Docker Image as an Artefact
        run: |
          docker save -o image.tar "$DOCKER_TAG"
        if: always()

      - name: Upload Docker Image Artefact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-${{ matrix.language }}-${{ matrix.version }}
          path: image.tar
