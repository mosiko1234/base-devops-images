# Use a base image
ARG BASE_IMAGE=adafef2e596e/base-image:latest
FROM ${BASE_IMAGE}

# Add metadata
LABEL maintainer="moshee@kayhut.com" \
      description="Python development environment"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

# Accept Python version as a required argument
ARG PYTHON_VERSION
ENV PYTHON_VERSION=${PYTHON_VERSION}

# Install Python and essential tools
RUN apt-get update && \
    apt-get install -y \
    software-properties-common \
    build-essential \
    git \
    curl && \
    # Add deadsnakes PPA for different Python versions
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    # Install Python with version handling
    apt-get install -y \
    python${PYTHON_VERSION} \
    python${PYTHON_VERSION}-dev \
    python${PYTHON_VERSION}-venv && \
    # Install distutils if version < 3.12
    if [ $(echo "${PYTHON_VERSION} < 3.12" | bc -l) -eq 1 ]; then \
        apt-get install -y python${PYTHON_VERSION}-distutils || true; \
    fi && \
    # Install pip with version handling
    if [ $(echo "${PYTHON_VERSION} >= 3.12" | bc -l) -eq 1 ]; then \
        curl -sS https://bootstrap.pypa.io/get-pip.py | python${PYTHON_VERSION}; \
    else \
        curl -sS https://bootstrap.pypa.io/pip/get-pip.py | python${PYTHON_VERSION}; \
    fi && \
    # Create symbolic links
    update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 1 && \
    # Install essential Python packages with version handling
    if [ $(echo "${PYTHON_VERSION} < 3.9" | bc -l) -eq 1 ]; then \
        python${PYTHON_VERSION} -m pip install \
        "poetry==1.4.2" \
        "pytest<8.0.0" \
        "black<24.0.0" \
        "pylint<3.0.0" \
        "mypy<1.8.0" \
        "flake8<7.0.0" \
        "isort<5.13.0"; \
    else \
        python${PYTHON_VERSION} -m pip install \
        "poetry" \
        "pytest" \
        "black" \
        "pylint" \
        "mypy" \
        "flake8" \
        "isort"; \
    fi && \
    # Clean up
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf ~/.cache/pip/*

# Create workspace directory
WORKDIR /workspace

# Add local bin to PATH
ENV PATH="/root/.local/bin:$PATH"

# Verify installation and show versions
RUN python${PYTHON_VERSION} --version && \
    pip --version && \
    poetry --version && \
    pytest --version && \
    black --version && \
    pylint --version && \
    mypy --version && \
    flake8 --version && \
    isort --version

# Set default entrypoint
ENTRYPOINT ["/bin/bash", "-c"]
CMD ["python --version"]

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python${PYTHON_VERSION} --version || exit 1