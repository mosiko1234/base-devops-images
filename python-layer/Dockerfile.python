# Use a base image
ARG BASE_IMAGE=adafef2e596e/base-image:latest
FROM ${BASE_IMAGE}

# Add metadata
LABEL maintainer="moshee@kayhut.com" \
      description="Python development environment"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

# Accept Python version as an argument
ARG PYTHON_VERSION

# Install core dependencies for Python
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libssl-dev \
        zlib1g-dev \
        libbz2-dev \
        libreadline-dev \
        libsqlite3-dev \
        libffi-dev \
        liblzma-dev \
        software-properties-common \
        wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Add deadsnakes PPA for Python installation
RUN add-apt-repository ppa:deadsnakes/ppa && apt-get update && \
    apt-get install -y --no-install-recommends \
        python${PYTHON_VERSION} \
        python${PYTHON_VERSION}-dev && \
    (apt-get install -y --no-install-recommends python${PYTHON_VERSION}-distutils || echo "distutils not available for Python ${PYTHON_VERSION}") && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install pip and essential packages with version handling
RUN wget -q https://bootstrap.pypa.io/get-pip.py && \
    python${PYTHON_VERSION} get-pip.py && \
    rm get-pip.py && \
    # Install packages based on Python version
    if [ "${PYTHON_VERSION}" \< "3.9" ]; then \
        python${PYTHON_VERSION} -m pip install \
            "poetry==1.4.2" \
            "pytest<8.0.0" \
            "black<24.0.0" \
            "pylint<3.0.0" \
            "mypy<1.8.0" \
            "flake8<7.0.0" \
            "isort<5.13.0"; \
    else \
        python${PYTHON_VERSION} -m pip install \
            "poetry" \
            "pytest" \
            "black" \
            "pylint" \
            "mypy" \
            "flake8" \
            "isort"; \
    fi && \
    rm -rf ~/.cache/pip/*

# Configure Python alternatives
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 1 && \
    update-alternatives --set python3 /usr/bin/python${PYTHON_VERSION}

# Create workspace directory
WORKDIR /workspace

# Add local bin to PATH
ENV PATH="/root/.local/bin:$PATH"

# Verify installation and show versions
RUN python${PYTHON_VERSION} --version && \
    pip --version && \
    poetry --version && \
    pytest --version && \
    black --version && \
    pylint --version && \
    mypy --version && \
    flake8 --version && \
    isort --version

# Set default entrypoint
ENTRYPOINT ["/bin/bash", "-c"]
CMD ["python3 --version"]

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python${PYTHON_VERSION} --version || exit 1