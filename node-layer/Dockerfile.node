# Use a base image
ARG BASE_IMAGE=adafef2e596e/base-image:latest
FROM ${BASE_IMAGE}

# Add metadata
LABEL maintainer="moshee@kayhut.com" \
      description="Node.js development environment"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    NODE_ENV=development \
    NPM_CONFIG_LOGLEVEL=warn \
    NPM_CONFIG_COLOR=false

# Accept Node.js version as a required argument
ARG NODE_VERSION
ENV NODE_VERSION=${NODE_VERSION}

# Install Node.js and npm with version-specific configurations
RUN curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \
    apt-get update && \
    apt-get install -y \
    nodejs \
    build-essential \
    python3 && \
    # Install global npm packages with version handling
    if [ "${NODE_VERSION}" -lt "20" ]; then \
        npm install -g npm@8.19.4 && \
        npm install -g \
        pnpm@7.33.7 \
        yarn@1.22.19 \
        typescript@5.3.3; \
    else \
        npm install -g npm@latest && \
        npm install -g \
        pnpm@latest \
        yarn@latest \
        typescript@latest; \
    fi && \
    # Clean up
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    npm cache clean --force

# Create app directory
WORKDIR /app

# Add npm binary path to PATH
ENV PATH=/app/node_modules/.bin:$PATH

# Verify installation and show versions
RUN echo "Node version: $(node -v)" && \
    echo "NPM version: $(npm -v)" && \
    echo "Yarn version: $(yarn -v)" && \
    echo "PNPM version: $(pnpm -v)" && \
    echo "TypeScript version: $(tsc -v)"

# Set default entrypoint
ENTRYPOINT ["/bin/bash", "-c"]
CMD ["node -v && npm -v"]

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD node --version || exit 1